name: Intensive tests with docker
on:
   schedule:
      - cron: '0 3 * * 0'
   workflow_dispatch:
      inputs:
         docker_tag:
            description: 'Tag which will be looked for'
            required: false
            default: 'edge'
jobs:
   tests_mt:
      name: Tests MT
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      env:
            WORK: ${{ github.workspace }}
            WORK_DOCKER: '/home/docker'
      steps:
      -  name: Run
         run: |
            tag=":edge"
            if [[ "${{ github.event.inputs.docker_tag }}" != "" ]]; then
               tag=":${{ github.event.inputs.docker_tag }}"
            fi

            sudo apt-get update
            sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
               "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io

            # Test docker installation
            sudo docker pull hello-world > /dev/null
            sudo docker run --rm hello-world > /dev/null

            # Run tests with docker
            mkdir "${WORK}/docker-volume"
            sudo docker pull "bitextor/bitextor${tag}"
            sudo docker run -v "${WORK}/docker-volume:${WORK_DOCKER}/volume" --name bitextor --entrypoint /bin/bash --rm "bitextor/bitextor${tag}" \
                  -c 'bitextor/tests/run-tests.sh -t 0x01; \
                      cp -f '"${WORK_DOCKER}/data/fails.log"' '"${WORK_DOCKER}/volume"' && \
                      rm -rf '"${WORK_DOCKER}/volume/reports"' && \
                      cp -r '"${WORK_DOCKER}/reports"' '"${WORK_DOCKER}/volume"''
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/docker-volume/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/docker-volume/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/docker-volume/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/docker-volume/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_db:
      name: Tests dictionary based
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      env:
            WORK: ${{ github.workspace }}
            WORK_DOCKER: '/home/docker'
      steps:
      -  name: Run
         run: |
            tag=":edge"
            if [[ "${{ github.event.inputs.docker_tag }}" != "" ]]; then
               tag=":${{ github.event.inputs.docker_tag }}"
            fi

            sudo apt-get update
            sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
               "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io

            # Test docker installation
            sudo docker pull hello-world > /dev/null
            sudo docker run --rm hello-world > /dev/null

            # Run tests with docker
            mkdir "${WORK}/docker-volume"
            sudo docker pull "bitextor/bitextor${tag}"
            sudo docker run -v "${WORK}/docker-volume:${WORK_DOCKER}/volume" --name bitextor --entrypoint /bin/bash --rm "bitextor/bitextor${tag}" \
                  -c 'bitextor/tests/run-tests.sh -t 0x02; \
                      cp -f '"${WORK_DOCKER}/data/fails.log"' '"${WORK_DOCKER}/volume"' && \
                      rm -rf '"${WORK_DOCKER}/volume/reports"' && \
                      cp -r '"${WORK_DOCKER}/reports"' '"${WORK_DOCKER}/volume"''
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/docker-volume/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/docker-volume/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/docker-volume/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/docker-volume/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_gendic:
      name: Tests generate dictionary
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      env:
            WORK: ${{ github.workspace }}
            WORK_DOCKER: '/home/docker'
      steps:
      -  name: Run
         run: |
            tag=":edge"
            if [[ "${{ github.event.inputs.docker_tag }}" != "" ]]; then
               tag=":${{ github.event.inputs.docker_tag }}"
            fi

            sudo apt-get update
            sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
               "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io

            # Test docker installation
            sudo docker pull hello-world > /dev/null
            sudo docker run --rm hello-world > /dev/null

            # Run tests with docker
            mkdir "${WORK}/docker-volume"
            sudo docker pull "bitextor/bitextor${tag}"
            sudo docker run -v "${WORK}/docker-volume:${WORK_DOCKER}/volume" --name bitextor --entrypoint /bin/bash --rm "bitextor/bitextor${tag}" \
                  -c 'bitextor/tests/run-tests.sh -t 0x04; \
                      cp -f '"${WORK_DOCKER}/data/fails.log"' '"${WORK_DOCKER}/volume"' && \
                      rm -rf '"${WORK_DOCKER}/volume/reports"' && \
                      cp -r '"${WORK_DOCKER}/reports"' '"${WORK_DOCKER}/volume"''
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/docker-volume/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/docker-volume/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/docker-volume/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/docker-volume/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_genbicleaner:
      name: Tests generate bicleaner model
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      env:
            WORK: ${{ github.workspace }}
            WORK_DOCKER: '/home/docker'
      steps:
      -  name: Run
         run: |
            tag=":edge"
            if [[ "${{ github.event.inputs.docker_tag }}" != "" ]]; then
               tag=":${{ github.event.inputs.docker_tag }}"
            fi

            sudo apt-get update
            sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
               "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io

            # Test docker installation
            sudo docker pull hello-world > /dev/null
            sudo docker run --rm hello-world > /dev/null

            # Run tests with docker
            mkdir "${WORK}/docker-volume"
            sudo docker pull "bitextor/bitextor${tag}"
            sudo docker run -v "${WORK}/docker-volume:${WORK_DOCKER}/volume" --name bitextor --entrypoint /bin/bash --rm "bitextor/bitextor${tag}" \
                  -c 'bitextor/tests/run-tests.sh -t 0x08; \
                      cp -f '"${WORK_DOCKER}/data/fails.log"' '"${WORK_DOCKER}/volume"' && \
                      rm -rf '"${WORK_DOCKER}/volume/reports"' && \
                      cp -r '"${WORK_DOCKER}/reports"' '"${WORK_DOCKER}/volume"''
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/docker-volume/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/docker-volume/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/docker-volume/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/docker-volume/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_gendic_genbicleaner:
      name: Tests generate dictionary and bicleaner model
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      env:
            WORK: ${{ github.workspace }}
            WORK_DOCKER: '/home/docker'
      steps:
      -  name: Run
         run: |
            tag=":edge"
            if [[ "${{ github.event.inputs.docker_tag }}" != "" ]]; then
               tag=":${{ github.event.inputs.docker_tag }}"
            fi

            sudo apt-get update
            sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
               "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io

            # Test docker installation
            sudo docker pull hello-world > /dev/null
            sudo docker run --rm hello-world > /dev/null

            # Run tests with docker
            mkdir "${WORK}/docker-volume"
            sudo docker pull "bitextor/bitextor${tag}"
            sudo docker run -v "${WORK}/docker-volume:${WORK_DOCKER}/volume" --name bitextor --entrypoint /bin/bash --rm "bitextor/bitextor${tag}" \
                  -c 'bitextor/tests/run-tests.sh -t 0x10; \
                      cp -f '"${WORK_DOCKER}/data/fails.log"' '"${WORK_DOCKER}/volume"' && \
                      rm -rf '"${WORK_DOCKER}/volume/reports"' && \
                      cp -r '"${WORK_DOCKER}/reports"' '"${WORK_DOCKER}/volume"''
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/docker-volume/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/docker-volume/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/docker-volume/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/docker-volume/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_mt_db:
      name: Tests combining dictionaries and MT
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      env:
            WORK: ${{ github.workspace }}
            WORK_DOCKER: '/home/docker'
      steps:
      -  name: Run
         run: |
            tag=":edge"
            if [[ "${{ github.event.inputs.docker_tag }}" != "" ]]; then
               tag=":${{ github.event.inputs.docker_tag }}"
            fi

            sudo apt-get update
            sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
               "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io

            # Test docker installation
            sudo docker pull hello-world > /dev/null
            sudo docker run --rm hello-world > /dev/null

            # Run tests with docker
            mkdir "${WORK}/docker-volume"
            sudo docker pull "bitextor/bitextor${tag}"
            sudo docker run -v "${WORK}/docker-volume:${WORK_DOCKER}/volume" --name bitextor --entrypoint /bin/bash --rm "bitextor/bitextor${tag}" \
                  -c 'bitextor/tests/run-tests.sh -t 0x20; \
                      cp -f '"${WORK_DOCKER}/data/fails.log"' '"${WORK_DOCKER}/volume"' && \
                      rm -rf '"${WORK_DOCKER}/volume/reports"' && \
                      cp -r '"${WORK_DOCKER}/reports"' '"${WORK_DOCKER}/volume"''
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/docker-volume/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/docker-volume/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/docker-volume/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/docker-volume/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
   tests_others:
      name: Other tests
      runs-on: ubuntu-20.04
      timeout-minutes: 600
      env:
            WORK: ${{ github.workspace }}
            WORK_DOCKER: '/home/docker'
      steps:
      -  name: Run
         run: |
            tag=":edge"
            if [[ "${{ github.event.inputs.docker_tag }}" != "" ]]; then
               tag=":${{ github.event.inputs.docker_tag }}"
            fi

            sudo apt-get update
            sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
               "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io

            # Test docker installation
            sudo docker pull hello-world > /dev/null
            sudo docker run --rm hello-world > /dev/null

            # Run tests with docker
            mkdir "${WORK}/docker-volume"
            sudo docker pull "bitextor/bitextor${tag}"
            sudo docker run -v "${WORK}/docker-volume:${WORK_DOCKER}/volume" --name bitextor --entrypoint /bin/bash --rm "bitextor/bitextor${tag}" \
                  -c 'bitextor/tests/run-tests.sh -t 0x40; \
                      cp -f '"${WORK_DOCKER}/data/fails.log"' '"${WORK_DOCKER}/volume"' && \
                      rm -rf '"${WORK_DOCKER}/volume/reports"' && \
                      cp -r '"${WORK_DOCKER}/reports"' '"${WORK_DOCKER}/volume"''
      -  name: Print log of tests which failed
         if: ${{ always() }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/docker-volume/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls ${WORK}/docker-volume/reports/ | grep ${notest}- || true)" != "" ]]; then
                     report_file="$(ls ${WORK}/docker-volume/reports/${notest}-* | head -n 1)"
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/docker-volume/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi

name: Build, test and upload with conda
on:
   push:
      branches:
         - master
      paths-ignore:
         - '**.md'
         - 'docs/**'
         - 'img/**'
jobs:
   conda_build_testing_and_upload:
      name: Build, test with conda and upload
      runs-on: ubuntu-20.04
      timeout-minutes: 300
      steps:
      -  name: Set distrib release version if not set
         env:
            DR_VERSION: 20.04
         run: |
            # Hack to get setup-python to work on act (https://github.com/nektos/act/issues/213)
            if [ ! -f "/etc/lsb-release" ] ; then
               echo "DISTRIB_RELEASE=$DR_VERSION" > /etc/lsb-release
            fi
      -  name: Install required linux packages
         run: |
            apt-get --assume-yes update || sudo apt-get --assume-yes update || true
            # Docker default user is root, but is not on Github Action (https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners#administrative-privileges-of-github-hosted-runners),
            #  so we use sudo and Docker will not complain and Github Actions will work
            apt-get --assume-yes install sudo || true
            sudo apt-get --assume-yes install wget git build-essential coreutils
      -  name: Install Miniconda3
         run: |
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b
            . ~/miniconda3/etc/profile.d/conda.sh
            conda list
      -  uses: actions/checkout@v2
      -  name: Create Bitextor conda build
         working-directory: ./conda-build/bitextor
         run: |
            . ~/miniconda3/etc/profile.d/conda.sh
            conda deactivate && ./make_conda_build.sh -r
      -  name: Install Bitextor
         run: |
            . ~/miniconda3/etc/profile.d/conda.sh
            conda deactivate
            conda create -y -n bitextor-installation
            conda activate bitextor-installation

            bitextor_package=$(ls "$CONDA_PREFIX/../../envs/bitextor-build/conda-bld/linux-64" | grep ^bitextor.*[.]tar[.]bz2$ | sort -r | head -n 1)

            conda install -y "$CONDA_PREFIX/../../envs/bitextor-build/conda-bld/linux-64/$bitextor_package"
            conda update -y --all
            command -v "bitextor" || command -v "bitextor.sh"
      -  name: Run tests
         id: tests
         env:
            WORK: ${{ github.workspace }}
         run: |
            . ~/miniconda3/etc/profile.d/conda.sh
            conda activate bitextor-installation

            chmod 775 "$CONDA_PREFIX/bitextor/tests/run-tests-min.sh"
            "$CONDA_PREFIX/bitextor/tests/run-tests-min.sh" -w "$WORK" -j 4
      -  name: Print log of tests which failed
         if: ${{ steps.tests.conclusion != 'success' }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            if [[ -f "${WORK}/data/fails.log" ]]; then
               while read line; do
                  eval "array=($line)"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  if [[ "$(ls "${WORK}/reports/" | grep ${notest}- || true)" != "" ]]; then
                     report_file=$(ls "${WORK}/reports/${notest}-"* | head -n 1)
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi
                  echo ""
               done < "${WORK}/data/fails.log"
            else
               >&2 echo "ERROR: could not find the file which contain the fails, and should exist"
               exit 1
            fi
      -  name: Print log subsample of tests which succeeded
         if: ${{ steps.tests.conclusion == 'success' }}
         env:
            WORK: ${{ github.workspace }}
         run: |
            for report_file in $(ls "${WORK}/reports/*"); do
               notest=$(basename "$report_file" | sed -E 's/([0-9]+).*/\1/')
               sent_file=$(cat "$report_file" | grep "output:.*.sent.gz" | sed -E 's/.*output:\ (\/.*[.]sent[.]gz).*$/\1/')

               str="# Test $notest #"
               eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
               echo "$str"
               eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

               if [[ -f "$sent_file" ]]; then
                  nolines=$(zcat "$sent_file" | wc -l)

                  if [[ "$nolines" -gt "15" ]]; then
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' \
                        <(head -6 <(cat "$sent_file") \
                           && cat "$sent_file" \
                              | head -n -5 \
                              | tail -n +7 \
                              | shuf --random-source=<(yes 117 | head -100) \
                              | tail -5 \
                           && cat "$sent_file" | tail -5)
                  else
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$sent_file"
                  fi
               else
                  echo "(warning) No sent file found for test $notest"
               fi

               echo ""
            done
      -  name: Upload to Anaconda Cloud
         id: deployment
         # Check if tests succeeded and if we have, likely, a release (it is not sure)
         if: ${{ steps.tests.outcome == 'success' && startsWith(github.ref, 'refs/tags/v') }}
         env:
            ANACONDA_CLOUD_TOKEN: ${{ secrets.ANACONDA_CLOUD_TOKEN }}
         run: |
            . ~/miniconda3/etc/profile.d/conda.sh
            conda activate bitextor-installation
            conda install -y anaconda-client

            bitextor_package=$(ls "$CONDA_PREFIX/../../envs/bitextor-build/conda-bld/linux-64" | grep ^bitextor.*[.]tar[.]bz2$ | sort -r | head -n 1)

            anaconda -t "$ANACONDA_CLOUD_TOKEN" upload --force "$CONDA_PREFIX/../../envs/bitextor-build/conda-bld/linux-64/$bitextor_package"
      -  name: Trigger intensive tests
         # Check if tests succeeded and if we have, likely, a release (it is not sure)
         if: ${{ steps.deployment.outcome == 'success' && startsWith(github.ref, 'refs/tags/v') }}
         env:
            BITEXTOR_BOT_EMAIL: ${{ secrets.BITEXTOR_BOT_EMAIL }}
            BITEXTOR_BOT_PAT_DOCKER_CD: ${{ secrets.BITEXTOR_BOT_PAT_DOCKER_CD }}
         run: |
            curl -u "${BITEXTOR_BOT_EMAIL}:${BITEXTOR_BOT_PAT_DOCKER_CD}" \
                 -X POST   -H "Accept: application/vnd.github.v3+json" \
                 https://api.github.com/repos/bitextor/bitextor/actions/workflows/condaIntensiveTests.yaml/dispatches \
                 -d '{"ref":"master"}'
                 #-d '{"ref":"master","inputs":{"conda_version":"SPECIFIC_VERSION","conda_build":"SPECIFIC_BUILD"}}'
